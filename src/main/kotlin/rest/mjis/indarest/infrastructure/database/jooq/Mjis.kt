/*
 * This file is generated by jOOQ.
 */
package rest.mjis.indarest.infrastructure.database.jooq


import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl

import rest.mjis.indarest.infrastructure.database.jooq.tables.BoardPinMappers
import rest.mjis.indarest.infrastructure.database.jooq.tables.Boards
import rest.mjis.indarest.infrastructure.database.jooq.tables.Pins
import rest.mjis.indarest.infrastructure.database.jooq.tables.Users


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class Mjis : SchemaImpl("mjis", DefaultCatalog.DEFAULT_CATALOG) {
    public companion object {

        /**
         * The reference instance of <code>mjis</code>
         */
        val MJIS: Mjis = Mjis()
    }

    /**
     * The table <code>mjis.board_pin_mappers</code>.
     */
    val BOARD_PIN_MAPPERS: BoardPinMappers get() = BoardPinMappers.BOARD_PIN_MAPPERS

    /**
     * The table <code>mjis.boards</code>.
     */
    val BOARDS: Boards get() = Boards.BOARDS

    /**
     * The table <code>mjis.pins</code>.
     */
    val PINS: Pins get() = Pins.PINS

    /**
     * The table <code>mjis.users</code>.
     */
    val USERS: Users get() = Users.USERS

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        BoardPinMappers.BOARD_PIN_MAPPERS,
        Boards.BOARDS,
        Pins.PINS,
        Users.USERS
    )
}
